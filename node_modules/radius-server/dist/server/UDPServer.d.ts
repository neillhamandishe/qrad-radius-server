/// <reference types="node" />
import { SocketType } from 'dgram';
import * as events from 'events';
import { EventEmitter } from 'events';
import type { IServer } from '../interfaces/Server.js';
import type { ILogger } from '../interfaces/Logger.js';
export declare class UDPServer extends events.EventEmitter implements IServer {
    private port;
    private address;
    protected logger: ILogger;
    static MAX_RETRIES: number;
    private timeout;
    private server;
    constructor(port: number, address: string, logger: ILogger, type?: SocketType);
    sendToClient(msg: string | Uint8Array, port?: number, address?: string, callback?: (error: Error | null, bytes: number) => void, expectAcknowledgment?: boolean): void;
    start(): Promise<EventEmitter>;
    private setupListeners;
}
